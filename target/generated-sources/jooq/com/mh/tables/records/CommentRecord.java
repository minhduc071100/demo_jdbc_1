/*
 * This file is generated by jOOQ.
 */
package com.mh.tables.records;


import com.mh.tables.Comment;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record7<Integer, Integer, Integer, String, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>website1.comment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>website1.comment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>website1.comment.post_id</code>.
     */
    public void setPostId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>website1.comment.post_id</code>.
     */
    public Integer getPostId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>website1.comment.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>website1.comment.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>website1.comment.content</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>website1.comment.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>website1.comment.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>website1.comment.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>website1.comment.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>website1.comment.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>website1.comment.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>website1.comment.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, String, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comment.COMMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Comment.COMMENT.POST_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Comment.COMMENT.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return Comment.COMMENT.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Comment.COMMENT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comment.COMMENT.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Comment.COMMENT.DELETED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPostId();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getDeletedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPostId();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getDeletedAt();
    }

    @Override
    public CommentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentRecord value2(Integer value) {
        setPostId(value);
        return this;
    }

    @Override
    public CommentRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public CommentRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CommentRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CommentRecord value7(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public CommentRecord values(Integer value1, Integer value2, Integer value3, String value4, LocalDateTime value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer id, Integer postId, Integer userId, String content, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime deletedAt) {
        super(Comment.COMMENT);

        setId(id);
        setPostId(postId);
        setUserId(userId);
        setContent(content);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDeletedAt(deletedAt);
    }
}
